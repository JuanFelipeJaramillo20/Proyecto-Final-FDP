#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.7 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 78 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
255 255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
255 255 255 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 1855 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 216
(6
 #"#reader(lib \"htdp-advanced-reader.ss\" \"lang\")((modname |Proyecto"
 #" final, sistema de admisiones Tulua.|) (read-case-sensitive #t) (tea"
 #"chpacks ()) (htdp-settings #(#t constructor repeating-decimal #t #t "
 #"none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/batch-io"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 9 #"aspirante"
0 0 24 3 2 #" ("
0 0 14 3 18 #"numero-inscripcion"
0 0 24 3 1 #" "
0 0 14 3 6 #"nombre"
0 0 24 3 1 #" "
0 0 14 3 8 #"apellido"
0 0 24 3 1 #" "
0 0 14 3 2 #"c1"
0 0 24 3 1 #" "
0 0 14 3 2 #"c2"
0 0 24 3 1 #" "
0 0 14 3 2 #"c3"
0 0 24 3 1 #" "
0 0 14 3 2 #"c4"
0 0 24 3 1 #" "
0 0 14 3 2 #"c5"
0 0 24 3 1 #" "
0 0 14 3 15 #"codigo-programa"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 17 3 119
(7
 #";; Autor: Valentina Cobo Bastidas - 202060174, Paola Andrea Domingue"
 #"z - 202059956 ,  Juan Felipe Jaramillo - 202060257 "
) 0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Fecha de Creaci\303\263n: 26 de Septiembre de 2020"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; Contrato: Cargar-datos: string -> Vector de Aspirantes"
0 0 24 29 1 #"\n"
0 0 17 3 151
(8
 #";; Prop\303\263sito: Esta funci\303\263n lee un archivo del cual le "
 #"pasamos la ubicaci\303\263n como par\303\241metro, y retorna los dat"
 #"os leidos como un vector de aspirantes."
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Ejemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; (cargar-datos \"data/lista-aspirantes.txt\"), retorna:"
0 0 24 29 1 #"\n"
0 9        2521 21           0 0           0 419 0 24 3 1 #"("
0 0 14 3 6 #"vector"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Juanita\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Perez\""
0 0 24 3 1 #" "
0 0 21 3 2 #"85"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"75"
0 0 24 3 1 #" "
0 0 21 3 2 #"65"
0 0 24 3 1 #" "
0 0 21 3 2 #"98"
0 0 24 3 1 #" "
0 0 21 3 4 #"3743"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Pepito\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Rodriguez\""
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 1 #" "
0 0 21 3 2 #"66"
0 0 24 3 1 #" "
0 0 21 3 2 #"59"
0 0 24 3 1 #" "
0 0 21 3 2 #"95"
0 0 24 3 1 #" "
0 0 21 3 2 #"58"
0 0 24 3 1 #" "
0 0 21 3 4 #"3249"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Adrian\""
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Estrella\""
0 0 24 3 1 #" "
0 0 21 3 2 #"63"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 4 #"3249"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Alejandro\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Cortes\""
0 0 24 3 1 #" "
0 0 21 3 2 #"53"
0 0 24 3 1 #" "
0 0 21 3 2 #"37"
0 0 24 3 1 #" "
0 0 21 3 2 #"29"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 1 #" "
0 0 21 3 2 #"39"
0 0 24 3 1 #" "
0 0 21 3 4 #"3249"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Cristina\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Narvaez\""
0 0 24 3 1 #" "
0 0 21 3 2 #"21"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"32"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"52"
0 0 24 3 1 #" "
0 0 21 3 4 #"3845"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Andr\303\251s\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Lopez\""
0 0 24 3 1 #" "
0 0 21 3 2 #"81"
0 0 24 3 1 #" "
0 0 21 3 2 #"85"
0 0 24 3 1 #" "
0 0 21 3 2 #"56"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"44"
0 0 24 3 1 #" "
0 0 21 3 4 #"3753"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Mar\303\255a\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Heredia\""
0 0 24 3 1 #" "
0 0 21 3 2 #"47"
0 0 24 3 1 #" "
0 0 21 3 2 #"62"
0 0 24 3 1 #" "
0 0 21 3 2 #"35"
0 0 24 3 1 #" "
0 0 21 3 2 #"51"
0 0 24 3 1 #" "
0 0 21 3 2 #"34"
0 0 24 3 1 #" "
0 0 21 3 4 #"3753"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Mar\303\255a\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Padilla\""
0 0 24 3 1 #" "
0 0 21 3 2 #"67"
0 0 24 3 1 #" "
0 0 21 3 2 #"58"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"64"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 4 #"2724"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"\303\201ngel\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Delgado\""
0 0 24 3 1 #" "
0 0 21 3 2 #"75"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"69"
0 0 24 3 1 #" "
0 0 21 3 2 #"41"
0 0 24 3 1 #" "
0 0 21 3 2 #"38"
0 0 24 3 1 #" "
0 0 21 3 4 #"2724"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Maria\""
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Guerrero\""
0 0 24 3 1 #" "
0 0 21 3 2 #"43"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 21 3 2 #"82"
0 0 24 3 1 #" "
0 0 21 3 2 #"99"
0 0 24 3 1 #" "
0 0 21 3 2 #"76"
0 0 24 3 1 #" "
0 0 21 3 4 #"3743"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 4 #"1225"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Ellen\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Vaughn\""
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 2 #"71"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 21 3 2 #"99"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 4 #"3841"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 4 #"1226"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Shanon\""
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Mcintosh\""
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 2 #"81"
0 0 24 3 1 #" "
0 0 21 3 2 #"21"
0 0 24 3 1 #" "
0 0 21 3 2 #"32"
0 0 24 3 1 #" "
0 0 21 3 2 #"66"
0 0 24 3 1 #" "
0 0 21 3 4 #"2724"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 4 #"1227"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Amritpal\""
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Hastings\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"96"
0 0 24 3 1 #" "
0 0 21 3 2 #"48"
0 0 24 3 1 #" "
0 0 21 3 2 #"65"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 4 #"2710"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 4 #"1228"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"Kiran\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Barber\""
0 0 24 3 1 #" "
0 0 21 3 2 #"32"
0 0 24 3 1 #" "
0 0 21 3 2 #"97"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 21 3 2 #"93"
0 0 24 3 1 #" "
0 0 21 3 2 #"94"
0 0 24 3 1 #" "
0 0 21 3 4 #"3845"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 4 #"1229"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Brennan\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Pruitt\""
0 0 24 3 1 #" "
0 0 21 3 2 #"32"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 1 #" "
0 0 21 3 2 #"36"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 21 3 2 #"32"
0 0 24 3 1 #" "
0 0 21 3 4 #"2724"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 4 #"1230"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Adaline\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Correa\""
0 0 24 3 1 #" "
0 0 21 3 2 #"99"
0 0 24 3 1 #" "
0 0 21 3 2 #"97"
0 0 24 3 1 #" "
0 0 21 3 2 #"76"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"72"
0 0 24 3 1 #" "
0 0 21 3 4 #"3841"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 4 #"1231"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Tyler-Jay\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Rodgers\""
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 1 #" "
0 0 21 3 2 #"48"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"41"
0 0 24 3 1 #" "
0 0 21 3 4 #"3845"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 4 #"1232"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Rae\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Lindsey\""
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"76"
0 0 24 3 1 #" "
0 0 21 3 2 #"97"
0 0 24 3 1 #" "
0 0 21 3 2 #"31"
0 0 24 3 1 #" "
0 0 21 3 4 #"3845"
0 0 24 3 2 #"))"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; Definici\303\263n:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"vectorAspirantes"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 17 3 33 #";; Variable de lista de empleados"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"cargar-datos"
0 0 24 3 1 #" "
0 0 14 3 9 #"ubicacion"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 165
(9
 #";;Esta funci\303\263n recibe una lista de lista aspirantes y la norm"
 #"aliza (convierte todos los datos de un aspirante en una lista sencil"
 #"la en vez de una lista con listas) "
) 0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"cargarAspirantes"
0 0 24 3 1 #" "
0 0 14 3 15 #"listaAspirantes"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 15 #"listaAspirantes"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 15 #"listaAspirantes"
0 0 24 3 3 #")) "
0 0 19 3 27 #"\"Porfavor cargue una lista\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 5 #"cons?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 15 #"listaAspirantes"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"make-aspirante"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 14 #"string->number"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 15 #"listaAspirantes"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"second"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 15 #"listaAspirantes"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"third"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 15 #"listaAspirantes"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 14 #"string->number"
0 0 24 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 15 #"listaAspirantes"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 14 #"string->number"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fifth"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 15 #"listaAspirantes"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 14 #"string->number"
0 0 24 3 2 #" ("
0 0 14 3 5 #"sixth"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 15 #"listaAspirantes"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 14 #"string->number"
0 0 24 3 2 #" ("
0 0 14 3 7 #"seventh"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 15 #"listaAspirantes"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 14 #"string->number"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 15 #"listaAspirantes"
0 0 24 3 10 #"))))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 14 #"string->number"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 15 #"listaAspirantes"
0 0 24 3 11 #")))))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"            ) ("
0 0 14 3 16 #"cargarAspirantes"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 15 #"listaAspirantes"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              )]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 61
#"\"Error al cargar los Aspirantes. Por favor intente de nuevo.\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         ))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 16 #"vectorAspirantes"
0 0 24 3 2 #" ("
0 0 14 3 16 #"cargarAspirantes"
0 0 24 3 2 #" ("
0 0 14 3 15 #"read-words/line"
0 0 24 3 1 #" "
0 0 14 3 9 #"ubicacion"
0 0 24 3 4 #"))) "
0 0 17 3 91
(10
 #";;Asignamos la lista de aspirantes a la variable que creamos anterio"
 #"rmente vectorAspirantes"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 16 #"vectorAspirantes"
0 0 24 3 2 #" ("
0 0 14 3 12 #"list->vector"
0 0 24 3 1 #" "
0 0 14 3 16 #"vectorAspirantes"
0 0 24 3 3 #")) "
0 0 17 3 70
(11
 #";;Convertimos la lista en un vector y la asignamos a la misma variab"
 #"le"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 47 #"\"Los aspirantes fueron cargados correctamente!\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 24 3 3 #")) "
0 0 17 3 71
(12
 #";;Mensaje de confirmaci\303\263n d"
 #"e que el m\303\251todo se ejecutr\303\263 correctamente"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"cargar-datos"
0 0 24 3 1 #" "
0 0 19 3 28 #"\"datos/lista-aspirantes.txt\""
0 0 24 3 2 #") "
0 0 17 3 51 #";;Cargamos los datos a la variable vectorAspirantes"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 96
(13
 #";; Definimos una estructura de aspirante con los datos necesarios pa"
 #"ra facilitar el ordenamiento"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 13 #"aspi-programa"
0 0 24 3 2 #" ("
0 0 14 3 13 #"codigo-inscri"
0 0 24 3 1 #" "
0 0 14 3 6 #"nombre"
0 0 24 3 1 #" "
0 0 14 3 8 #"apellido"
0 0 24 3 1 #" "
0 0 14 3 7 #"puntaje"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 17 3 119 7 0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Fecha de Creaci\303\263n: 26 de Septiembre de 2020"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; Contrato: generar-listado: string, string -> archivo de texto"
0 0 24 29 1 #"\n"
0 0 17 3 187
(14
 #";; Prop\303\263sito: Esta funci\303\263n recibe una ubicaci\303\263n"
 #" y un c\303\263digo, y genera una lista ordenada de mayor a menor po"
 #"r el puntaje de los aspirantes del c\303\263digo ingresado en un arc"
 #"hivo de texto"
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Ejemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 150
(15
 #";; (generar-listado \"datos/ordenados-3743.txt\" \"3743\"), genera u"
 #"n archivo de texto \"ordenados-37"
 #"43.txt\" con los aspirantes de c\303\263digo 3743 organizados"
) 0 0 24 29 1 #"\n"
0 0 17 3 150
(16
 #";; (generar-listado \"datos/ordenados-2724.txt\" \"2724\"), genera u"
 #"n archivo de texto \"ordenados-37"
 #"43.txt\" con los aspirantes de c\303\263digo 2724 organizados"
) 0 0 24 29 1 #"\n"
0 0 17 3 150
(17
 #";; (generar-listado \"datos/ordenados-2710.txt\" \"2710\"), genera u"
 #"n archivo de texto \"ordenados-37"
 #"43.txt\" con los aspirantes de c\303\263digo 2710 organizados"
) 0 0 24 29 1 #"\n"
0 0 17 3 150
(18
 #";; (generar-listado \"datos/ordenados-3753.txt\" \"3753\"), genera u"
 #"n archivo de texto \"ordenados-37"
 #"43.txt\" con los aspirantes de c\303\263digo 3753 organizados"
) 0 0 24 29 1 #"\n"
0 0 17 3 150
(19
 #";; (generar-listado \"datos/ordenados-2712.txt\" \"2712\"), genera u"
 #"n archivo de texto \"ordenados-37"
 #"43.txt\" con los aspirantes de c\303\263digo 2712 organizados"
) 0 0 24 29 1 #"\n"
0 0 17 3 150
(20
 #";; (generar-listado \"datos/ordenados-3249.txt\" \"3249\"), genera u"
 #"n archivo de texto \"ordenados-37"
 #"43.txt\" con los aspirantes de c\303\263digo 3249 organizados"
) 0 0 24 29 1 #"\n"
0 0 17 3 150
(21
 #";; (generar-listado \"datos/ordenados-3841.txt\" \"3841\"), genera u"
 #"n archivo de texto \"ordenados-37"
 #"43.txt\" con los aspirantes de c\303\263digo 3841 organizados"
) 0 0 24 29 1 #"\n"
0 0 17 3 150 20 0 0 24 29 1 #"\n"
0 0 17 3 15 #";; Definici\303\263n:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"generar-listado"
0 0 24 3 1 #" "
0 0 14 3 9 #"ubicacion"
0 0 24 3 1 #" "
0 0 14 3 6 #"codigo"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"lista-a-string"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 17 3 145
(22
 #";;Esta funcion recibe una lista de aspirantes y concatena sus elemen"
 #"tos para que quede una lista con la informacion de los aspirantes co"
 #"mo String"
) 0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 27 #"aspi-programa-codigo-inscri"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 20 #"aspi-programa-nombre"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 22 #"aspi-programa-apellido"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 21 #"aspi-programa-puntaje"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 19 3 4 #"\"\\n\""
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 14 #"lista-a-string"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     )]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              ))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"ordenar-aspirante"
0 0 24 3 1 #" "
0 0 14 3 13 #"lstAspirantes"
0 0 24 3 2 #") "
0 0 17 3 78
(23
 #";;Esta funci\303\263n ordena los aspirantes de mayor a menor por su "
 #"puntaje obtenido"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         (("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ordenar"
0 0 24 3 1 #" "
0 0 14 3 4 #"lstA"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"lstA"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"ordenar-aux"
0 0 24 3 1 #" "
0 0 14 3 9 #"aspirante"
0 0 24 3 1 #" "
0 0 14 3 4 #"lstO"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"lstO"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"aspirante"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 9 #"aspirante"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"lstO"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 9 #"aspirante"
0 0 24 3 1 #" "
0 0 14 3 4 #"lstO"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"lstO"
0 0 24 3 3 #") ("
0 0 14 3 11 #"ordenar-aux"
0 0 24 3 1 #" "
0 0 14 3 9 #"aspirante"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"lstO"
0 0 24 3 2 #") "
0 0 14 3 1 #"f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      ))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                  ) ("
0 0 14 3 11 #"ordenar-aux"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"lstA"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ordenar"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"lstA"
0 0 24 3 2 #") "
0 0 14 3 1 #"f"
0 0 24 3 2 #") "
0 0 14 3 1 #"f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"              )))  ("
0 0 14 3 7 #"ordenar"
0 0 24 3 1 #" "
0 0 14 3 13 #"lstAspirantes"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #") ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 21 #"aspi-programa-puntaje"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                           ("
0 0 14 3 21 #"aspi-programa-puntaje"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                           )))"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"         ))                                     "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filtro"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #") "
0 0 17 3 67
(24
 #";;Filtro generico para obtener los aspirantes del c\303\263digo requ"
 #"erido"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"resto"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filtro"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #") "
0 0 14 3 1 #"f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"primero"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             )"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 7 #"primero"
0 0 24 3 4 #" ) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"primero"
0 0 24 3 1 #" "
0 0 14 3 5 #"resto"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"resto"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            )]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         ))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"calcular-porcentaje"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #" "
0 0 14 3 6 #"codigo"
0 0 24 3 2 #") "
0 0 17 3 138
(25
 #";;Esta funci\303\263n calcula el puntaje obtenido por los aspirantes"
 #" de acuerdo a su programa y retorna una lista de aspirantes con sus "
 #"puntajes"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 1 #")"
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 26 #"multiplicacion-porcentajes"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 1 #" "
0 0 14 3 2 #"p3"
0 0 24 3 1 #" "
0 0 14 3 2 #"p4"
0 0 24 3 1 #" "
0 0 14 3 2 #"p5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 12 #"aspirante-c1"
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 14 3 2 #"p1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 12 #"aspirante-c2"
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 14 3 2 #"p2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 12 #"aspirante-c3"
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 14 3 2 #"p3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 12 #"aspirante-c4"
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 14 3 2 #"p4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 12 #"aspirante-c5"
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")) "
0 0 14 3 2 #"p5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  ))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             )"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"cons"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 18 #"make-aspi-programa"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 28 #"aspirante-numero-inscripcion"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 16 #"aspirante-nombre"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 18 #"aspirante-apellido"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"3743\""
0 0 24 3 1 #" "
0 0 14 3 6 #"codigo"
0 0 24 3 2 #")("
0 0 14 3 26 #"multiplicacion-porcentajes"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.21"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.26"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.15"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.15"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.23"
0 0 24 3 26 #")]                        "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"2724\""
0 0 24 3 1 #" "
0 0 14 3 6 #"codigo"
0 0 24 3 2 #")("
0 0 14 3 26 #"multiplicacion-porcentajes"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.21"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.26"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.15"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.15"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.23"
0 0 24 3 19 #")]                 "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"2710\""
0 0 24 3 1 #" "
0 0 14 3 6 #"codigo"
0 0 24 3 2 #")("
0 0 14 3 26 #"multiplicacion-porcentajes"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.25"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.25"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.25"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.15"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.10"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"3753\""
0 0 24 3 1 #" "
0 0 14 3 6 #"codigo"
0 0 24 3 2 #")("
0 0 14 3 26 #"multiplicacion-porcentajes"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.15"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.35"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.30"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.15"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.05"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"2712\""
0 0 24 3 1 #" "
0 0 14 3 6 #"codigo"
0 0 24 3 2 #")("
0 0 14 3 26 #"multiplicacion-porcentajes"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.15"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.35"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.40"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.05"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.05"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"3249\""
0 0 24 3 1 #" "
0 0 14 3 6 #"codigo"
0 0 24 3 2 #")("
0 0 14 3 26 #"multiplicacion-porcentajes"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.40"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.10"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.10"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.40"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")] "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"3841\""
0 0 24 3 1 #" "
0 0 14 3 6 #"codigo"
0 0 24 3 2 #")("
0 0 14 3 26 #"multiplicacion-porcentajes"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.20"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.35"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.15"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.20"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.10"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"3249\""
0 0 24 3 1 #" "
0 0 14 3 6 #"codigo"
0 0 24 3 2 #")("
0 0 14 3 26 #"multiplicacion-porcentajes"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.30"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.30"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.10"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.20"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.10"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                ))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 19 #"calcular-porcentaje"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 14 3 6 #"codigo"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            )]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         ))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"     ) ("
0 0 14 3 10 #"write-file"
0 0 24 3 1 #" "
0 0 14 3 9 #"ubicacion"
0 0 24 3 1 #" "
0 0 17 3 35 #";;Escribimos la lista en el archivo"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 14 #"lista-a-string"
0 0 24 3 2 #" ("
0 0 14 3 17 #"ordenar-aspirante"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 19 #"calcular-porcentaje"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 6 #"filtro"
0 0 24 3 2 #" ("
0 0 14 3 12 #"vector->list"
0 0 24 3 1 #" "
0 0 14 3 16 #"vectorAspirantes"
0 0 24 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #")("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 25 #"aspirante-codigo-programa"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 14 #"string->number"
0 0 24 3 1 #" "
0 0 14 3 6 #"codigo"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 14 3 6 #"codigo"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"    )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Pruebas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"generar-listado"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"datos/ordenados-3743.txt\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"3743\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"datos/ordenados-3743.txt\""
0 0 24 3 2 #") "
0 0 21 3 2 #"#T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"generar-listado"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"datos/ordenados-2724.txt\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"2724\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"datos/ordenados-2724.txt\""
0 0 24 3 2 #") "
0 0 21 3 2 #"#T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"generar-listado"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"datos/ordenados-2710.txt\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"2710\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"datos/ordenados-2710.txt\""
0 0 24 3 2 #") "
0 0 21 3 2 #"#T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"generar-listado"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"datos/ordenados-3753.txt\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"3753\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"datos/ordenados-3753.txt\""
0 0 24 3 2 #") "
0 0 21 3 2 #"#T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"generar-listado"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"datos/ordenados-2712.txt\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"2712\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"datos/ordenados-2712.txt\""
0 0 24 3 2 #") "
0 0 21 3 2 #"#T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"generar-listado"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"datos/ordenados-3249.txt\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"3249\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"datos/ordenados-3249.txt\""
0 0 24 3 2 #") "
0 0 21 3 2 #"#T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"generar-listado"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"datos/ordenados-3841.txt\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"3841\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"datos/ordenados-3841.txt\""
0 0 24 3 2 #") "
0 0 21 3 2 #"#T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 15 #"generar-listado"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"datos/ordenados-3249.txt\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"3249\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"datos/ordenados-3249.txt\""
0 0 24 3 2 #") "
0 0 21 3 2 #"#T"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 119 7 0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Fecha de Creaci\303\263n: 26 de Septiembre de 2020"
0 0 24 29 1 #"\n"
0 0 17 3 73
(26
 #";; Contrato: eliminar-aspirante: lista de n\303\272meros -> lista de"
 #" aspirantes"
) 0 0 24 29 1 #"\n"
0 0 17 3 178
(27
 #";; Prop\303\263sito: Esta funci\303"
 #"\263n recibe una lista de n\303\272meros(que corresponde a numeros d"
 #"e inscripcion de aspirantes) y elimina los aspirantes cuyos numeros "
 #"de inscripci\303\263n coincidan"
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Ejemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; (eliminar-aspirante (list 1 2 3 4 5 6 7 8 9 10)), retorna:"
0 0 24 29 1 #"\n"
0 9        1129 21           0 0           0 187 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 7 #"Juanita"
0 0 24 3 1 #" "
0 0 14 3 5 #"Perez"
0 0 24 3 1 #" "
0 0 21 3 2 #"85"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 21 3 2 #"75"
0 0 24 3 1 #" "
0 0 21 3 2 #"65"
0 0 24 3 1 #" "
0 0 21 3 2 #"98"
0 0 24 3 1 #" "
0 0 21 3 4 #"3743"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 6 #"Pepito"
0 0 24 3 1 #" "
0 0 14 3 9 #"Rodriguez"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 1 #" "
0 0 21 3 2 #"66"
0 0 24 3 1 #" "
0 0 21 3 2 #"59"
0 0 24 3 1 #" "
0 0 21 3 2 #"95"
0 0 24 3 1 #" "
0 0 21 3 2 #"58"
0 0 24 3 1 #" "
0 0 21 3 4 #"3249"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 6 #"Adrian"
0 0 24 3 1 #" "
0 0 14 3 8 #"Estrella"
0 0 24 3 1 #" "
0 0 21 3 2 #"63"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 2 #"55"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 4 #"3249"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 9 #"Alejandro"
0 0 24 3 1 #" "
0 0 14 3 6 #"Cortes"
0 0 24 3 1 #" "
0 0 21 3 2 #"53"
0 0 24 3 1 #" "
0 0 21 3 2 #"37"
0 0 24 3 1 #" "
0 0 21 3 2 #"29"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 1 #" "
0 0 21 3 2 #"39"
0 0 24 3 1 #" "
0 0 21 3 4 #"3249"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 8 #"Cristina"
0 0 24 3 1 #" "
0 0 14 3 7 #"Narvaez"
0 0 24 3 1 #" "
0 0 21 3 2 #"21"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"32"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 21 3 2 #"52"
0 0 24 3 1 #" "
0 0 21 3 4 #"3845"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 14 3 7 #"Andr\303\251s"
0 0 24 3 1 #" "
0 0 14 3 5 #"Lopez"
0 0 24 3 1 #" "
0 0 21 3 2 #"81"
0 0 24 3 1 #" "
0 0 21 3 2 #"85"
0 0 24 3 1 #" "
0 0 21 3 2 #"56"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"44"
0 0 24 3 1 #" "
0 0 21 3 4 #"3753"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 14 3 6 #"Mar\303\255a"
0 0 24 3 1 #" "
0 0 14 3 7 #"Heredia"
0 0 24 3 1 #" "
0 0 21 3 2 #"47"
0 0 24 3 1 #" "
0 0 21 3 2 #"62"
0 0 24 3 1 #" "
0 0 21 3 2 #"35"
0 0 24 3 1 #" "
0 0 21 3 2 #"51"
0 0 24 3 1 #" "
0 0 21 3 2 #"34"
0 0 24 3 1 #" "
0 0 21 3 4 #"3753"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 6 #"Mar\303\255a"
0 0 24 3 1 #" "
0 0 14 3 7 #"Padilla"
0 0 24 3 1 #" "
0 0 21 3 2 #"67"
0 0 24 3 1 #" "
0 0 21 3 2 #"58"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"64"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 4 #"2724"
0 0 24 29 1 #"\n"
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 6 #"\303\201ngel"
0 0 24 3 1 #" "
0 0 14 3 7 #"Delgado"
0 0 24 3 1 #" "
0 0 21 3 2 #"75"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"69"
0 0 24 3 1 #" "
0 0 21 3 2 #"41"
0 0 24 3 1 #" "
0 0 21 3 2 #"38"
0 0 24 3 1 #" "
0 0 21 3 4 #"2724"
0 0 24 29 1 #"\n"
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 5 #"Maria"
0 0 24 3 1 #" "
0 0 14 3 8 #"Guerrero"
0 0 24 3 1 #" "
0 0 21 3 2 #"43"
0 0 24 3 1 #" "
0 0 21 3 2 #"19"
0 0 24 3 1 #" "
0 0 21 3 2 #"82"
0 0 24 3 1 #" "
0 0 21 3 2 #"99"
0 0 24 3 1 #" "
0 0 21 3 2 #"76"
0 0 24 3 1 #" "
0 0 21 3 4 #"3743"
0 0 24 29 1 #"\n"
0 0 14 3 3 #"Los"
0 0 24 3 1 #" "
0 0 14 3 11 #"estudiantes"
0 0 24 3 1 #" "
0 0 14 3 6 #"fueron"
0 0 24 3 1 #" "
0 0 14 3 11 #"eliminados."
0           0 0 0 24 29 1 #"\n"
0 0 17 3 15 #";; Definici\303\263n:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"eliminar-aspirante"
0 0 24 3 1 #" "
0 0 14 3 8 #"listanum"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"eliminar"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 1 #" "
0 0 14 3 8 #"listanum"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"verificar-iguales"
0 0 24 3 1 #" "
0 0 14 3 9 #"aspirante"
0 0 24 3 1 #" "
0 0 14 3 6 #"listan"
0 0 24 3 2 #") "
0 0 17 3 109
(28
 #";;Esta funci\303\263n verifica si hay aspirantes con un n\303\272mer"
 #"o de inscripci\303\263n igual a los de la lista de n\303\272meros"
) 0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 6 #"listan"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 28 #"aspirante-numero-inscripcion"
0 0 24 3 1 #" "
0 0 14 3 9 #"aspirante"
0 0 24 3 3 #") ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 6 #"listan"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 17 #"verificar-iguales"
0 0 24 3 1 #" "
0 0 14 3 9 #"aspirante"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 6 #"listan"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 )"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               ))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 17 #"verificar-iguales"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 2 #") "
0 0 14 3 8 #"listanum"
0 0 24 3 2 #") "
0 0 17 3 78
(29
 #";;Esta condici\303\263n evalua los aspirantes que coincidan y los im"
 #"prime en consola"
) 0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 28 #"aspirante-numero-inscripcion"
0 0 24 3 1 #"("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 16 #"aspirante-nombre"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 18 #"aspirante-apellido"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 12 #"aspirante-c1"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 12 #"aspirante-c2"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 12 #"aspirante-c3"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 12 #"aspirante-c4"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 12 #"aspirante-c5"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 25 #"aspirante-codigo-programa"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 19 3 4 #"\"\\n\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 8 #"eliminar"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 2 #") "
0 0 14 3 8 #"listanum"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 )]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"              [ ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 17 #"verificar-iguales"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 2 #") "
0 0 14 3 8 #"listanum"
0 0 24 3 5 #") ) ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 6 #") )) ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 118
(30
 #"\"No hay ning\303\272n aspirante inscrito con ese n\303\272mero de i"
 #"nscripci\303\263n. Por favor verifique los datos e intente de nuevo."
 #"\""
) 0 0 24 3 11 #") ]        "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 3 #") ("
0 0 14 3 8 #"eliminar"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 9 #"listaAspi"
0 0 24 3 2 #") "
0 0 14 3 8 #"listanum"
0 0 24 3 3 #")) "
0 0 17 3 89
(31
 #";;Este llamado recursivo genera la nueva lista sin los aspirantes qu"
 #"e han sido eliminados"
) 0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"         ))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"         ))) ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 16 #"vectorAspirantes"
0 0 24 3 2 #" ("
0 0 14 3 12 #"list->vector"
0 0 24 3 2 #" ("
0 0 14 3 8 #"eliminar"
0 0 24 3 2 #" ("
0 0 14 3 12 #"vector->list"
0 0 24 3 1 #" "
0 0 14 3 16 #"vectorAspirantes"
0 0 24 3 2 #") "
0 0 14 3 8 #"listanum"
0 0 24 3 4 #"))) "
0 0 17 3 64
#";;Carga la nueva lista como un vector en la variable ya definida"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 7 #"display"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 35 #"Los estudiantes fueron eliminados.\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 24 3 4 #" ) )"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"     ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 18 #"eliminar-aspirante"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"vector-ref"
0 0 24 3 1 #" "
0 0 14 3 16 #"vectorAspirantes"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 14 #"make-aspirante"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Antonio\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Barrera\""
0 0 24 3 1 #" "
0 0 21 3 2 #"33"
0 0 24 3 1 #" "
0 0 21 3 2 #"45"
0 0 24 3 1 #" "
0 0 21 3 2 #"77"
0 0 24 3 1 #" "
0 0 21 3 2 #"57"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 1 #" "
0 0 21 3 4 #"3743"
0 0 24 3 4 #") ) "
0 0 17 3 131
(32
 #";;Despues de eliminar los primeros 10 aspirantes el primer elemento "
 #"del vector debe ser el aspira"
 #"nte con n\303\272mero de inscripci\303\263n 11"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"vector-length"
0 0 24 3 1 #" "
0 0 14 3 16 #"vectorAspirantes"
0 0 24 3 2 #") "
0 0 21 3 4 #"1222"
0 0 24 3 2 #") "
0 0 17 3 126
(33
 #";;El vector original contiene 1232 aspirantes, despu\303\251s de eli"
 #"minar los 10 primeros deber\303\255a tener 1221 elementos (aspirante"
 #"s)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 119 7 0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Fecha de Creaci\303\263n: 26 de Septiembre de 2020"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; Contrato: guardar-aspirantes: string -> archivo de texto"
0 0 24 29 1 #"\n"
0 0 17 3 205
(34
 #";; Prop\303\263sito: Esta funci\303\263n recibe una ubicaci\303\263n"
 #" y guarda los aspirantes que haya en la variable vectorAspirantes en"
 #" el archivo de texto cuyo nombre y ubicaci\303\263n haya recibido la"
 #" funci\303\263n como par\303\241metro"
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Ejemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 172
(35
 #";; (guardar-aspirantes \"datos/lista-aspirantes-modificada.txt\"), g"
 #"enera un archivo llamado lista-aspirantes-modificada.txt con los asp"
 #"irantes que se encuentren en el vector"
) 0 0 24 29 1 #"\n"
0 0 17 3 15 #";; Definici\303\263n:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"guardar-aspirantes"
0 0 24 3 1 #" "
0 0 14 3 9 #"ubicacion"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"lista-a-string"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 17 3 128
(36
 #";;Esta funci\303\263n convierte una lista de aspirantes a una lista "
 #"de strings, lo cual permite que sea escrita en un archivo de texto"
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 28 #"aspirante-numero-inscripcion"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 16 #"aspirante-nombre"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 18 #"aspirante-apellido"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 12 #"aspirante-c1"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 12 #"aspirante-c2"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 12 #"aspirante-c3"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 12 #"aspirante-c4"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 12 #"aspirante-c5"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 19 3 3 #"\" \""
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 25 #"aspirante-codigo-programa"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 19 3 4 #"\"\\n\""
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 14 #"lista-a-string"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 5 #"lista"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           )]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"write-file"
0 0 24 3 1 #" "
0 0 14 3 9 #"ubicacion"
0 0 24 3 2 #" ("
0 0 14 3 14 #"lista-a-string"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"vector->list"
0 0 24 3 1 #" "
0 0 14 3 16 #"vectorAspirantes"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Pruebas:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 18 #"guardar-aspirantes"
0 0 24 3 1 #" "
0 0 19 3 39 #"\"datos/lista-aspirantes-modificada.txt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"file-exists?"
0 0 24 3 1 #" "
0 0 19 3 39 #"\"datos/lista-aspirantes-modificada.txt\""
0 0 24 3 3 #" ) "
0 0 21 3 2 #"#T"
0 0 24 3 2 #" )"
0           0
